version: "3.7"

services:
  galaxy-db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_DB=galaxy
      - POSTGRES_USER=galaxy
      - POSTGRES_PASSWORD=${DB_PASSWD:-galaxy}
    volumes:
      - ./machines/eb-app-api/home/api/galaxy/database/02-create-galaxy-tables.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - data:/var/lib/postgresql/data
    networks:
      intranet:

  galaxy-api-adm:
    build:
      context: machines/eb-app-api/
      dockerfile: adm.Dockerfile
    environment:
      - ALLOW_UNSECURE_CERT
      - API_SECRET
      - API_TIMEOUT
      - DB_HOST
      - DB_PASSWD
      - GALAXY_FQDN
      - KEYCLOAK_CLIENT_ID
      - KEYCLOAK_ORIGIN
      - KEYCLOAK_REALM
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-http.entrypoints=reverse-proxy-http"
      - "traefik.http.routers.api-http.rule=PathPrefix(`/api/adm`)"
      - "traefik.http.routers.api-https.entrypoints=reverse-proxy-https"
      - "traefik.http.routers.api-https.rule=PathPrefix(`/api/adm`)"
      - "traefik.http.routers.api-https.tls=true"
    depends_on:
      - galaxy-db
    networks:
      intranet:

  galaxy-api-pri:
    build:
      context: machines/eb-app-api/
      dockerfile: pri.Dockerfile
    environment:
      - API_SECRET
      - DB_HOST
      - DB_PASSWD
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-http.entrypoints=reverse-proxy-http"
      - "traefik.http.routers.api-http.rule=PathPrefix(`/api/pri`)"
      - "traefik.http.routers.api-https.entrypoints=reverse-proxy-https"
      - "traefik.http.routers.api-https.rule=PathPrefix(`/api/pri`)"
      - "traefik.http.routers.api-https.tls=true"
    depends_on:
      - galaxy-db
    networks:
      intranet:

  galaxy-api-pub:
    build:
      context: machines/eb-app-api/
      dockerfile: pub.Dockerfile
    environment:
      - DB_HOST
      - DB_PASSWD
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-http.entrypoints=reverse-proxy-http"
      - "traefik.http.routers.api-http.rule=PathPrefix(`/api/pub`)"
      - "traefik.http.routers.api-https.entrypoints=reverse-proxy-https"
      - "traefik.http.routers.api-https.rule=PathPrefix(`/api/pub`)"
      - "traefik.http.routers.api-https.tls=true"
    depends_on:
      - galaxy-db
    networks:
      intranet:

  galaxy-ui:
    build:
      context: machines/eb-app-ui/
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-http.entrypoints=reverse-proxy-http"
      - "traefik.http.routers.api-http.rule=PathPrefix(`/`)"
      - "traefik.http.routers.api-https.entrypoints=reverse-proxy-https"
      - "traefik.http.routers.api-https.rule=PathPrefix(`/`)"
      - "traefik.http.routers.api-https.tls=true"
    depends_on:
      - galaxy-api-adm
      - galaxy-api-pri
      - galaxy-api-pub
    networks:
      intranet:

  reverse-proxy:
    image: "traefik:v2.9"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.reverse-proxy-http.address=:80"
      - "--entrypoints.reverse-proxy-https.address=:443"
    networks:
      intranet:

volumes:
  data:

networks:
  intranet:
